<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>peregrinus-gpx-api</artifactId>
    <groupId>org.bremersee</groupId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>peregrinus-gpx-model-spring</artifactId>

  <properties>
    <base-package>org.bremersee.peregrinus</base-package>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>common-model-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>peregrinus-model-spring</artifactId>
      <version>1.0.0-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**</include>
        </includes>
      </resource>
      <resource>
        <directory>${project.basedir}/../src/swagger</directory>
        <targetPath>META-INF/swagger</targetPath>
        <filtering>false</filtering>
        <includes>
          <include>**</include>
        </includes>
        <excludes>
          <exclude>templates</exclude>
          <exclude>templates/**</exclude>
        </excludes>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>swagger-codegen-dependencies</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.bremersee</groupId>
                  <artifactId>common-model-spring</artifactId>
                  <outputDirectory>${basedir}/target/swagger</outputDirectory>
                  <includes>**/*.json,**/*.yml</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <!-- Copy api.yml to work dir. -->
          <execution>
            <id>swagger</id>
            <phase>initialize</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <destinationFile>
                ${basedir}/target/swagger/api.yml
              </destinationFile>
              <sourceFile>../src/swagger/peregrinus-gpx.yml</sourceFile>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-codegen-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <configurationFile>
                ${project.basedir}/../src/swagger/peregrinus-gpx-config.json
              </configurationFile>
              <!-- OpenAPI Spec file path (required) -->
              <inputSpec>
                ${basedir}/target/swagger/api.yml
              </inputSpec>
              <!-- target generation language (required) -->
              <language>spring</language>
              <!-- target output path  -->
              <output>${project.build.directory}/generated-sources</output>
              <!-- directory with mustache templates  -->
              <templateDirectory>
                ${project.basedir}/../src/swagger/templates
              </templateDirectory>
              <!-- the package to use for generated model objects/classes -->
              <modelPackage>${base-package}.model</modelPackage>
              <!-- the package to use for generated api objects/classes -->
              <apiPackage>${base-package}.api</apiPackage>
              <!-- the package to use for the generated invoker objects -->
              <invokerPackage>${base-package}.invoker</invokerPackage>
              <!-- enable XML annotations inside the generated models and API (only works with
                   Java language and libraries that provide support for JSON and XML) -->
              <withXml>false</withXml>
              <!-- generate the apis (true by default) -->
              <generateApis>false</generateApis>
              <!-- generate the api tests (true by default.
                   Only available if generateApis is true) -->
              <generateApiTests>false</generateApiTests>
              <!-- generate the api documentation (true by default.
                   Only available if generateApis is true) -->
              <generateApiDocumentation>false</generateApiDocumentation>
              <!-- generate the models (true by default) -->
              <generateModels>true</generateModels>
              <!-- generate the model tests (true by default.
                   Only available if generateModels is true) -->
              <generateModelTests>false</generateModelTests>
              <!-- generate the model documentation (true by default.
                   Only available if generateModels is true) -->
              <generateModelDocumentation>true</generateModelDocumentation>
              <!-- generate the supporting files (true by default) -->
              <generateSupportingFiles>false</generateSupportingFiles>
              <!-- a map of language-specific parameters -->
              <configOptions>
                <!-- boolean - toggle "implements Serializable" for generated models
                     (Default: false) -->
                <serializableModel>true</serializableModel>
                <!-- hides the timestamp when files were generated -->
                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                <!-- whether to include support for application/xml content type and include XML
                     annotations in the model (works with libraries that provide support for JSON
                     and XML) (Default: false) -->
                <withXml>false</withXml>
                <!-- Date library to use -->
                <dateLibrary>java8</dateLibrary>
                <!-- Use Java8 classes instead of third party equivalents -->
                <java8>true</java8>

                <!-- api generation: generate class names by tags -->
                <useTags>true</useTags>
                <!-- api generation: generate only interfaces, no stubs -->
                <interfaceOnly>true</interfaceOnly>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>